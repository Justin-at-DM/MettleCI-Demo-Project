{
  "interaction_properties" : {
    "source" : [ {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to run specified SQL statements before and after data is accessed in the database.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Run before and after SQL statements",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "before_after",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statements or the fully-qualified name of the file that contains the SQL statements to run once after all data is processed.",
      "displayGroup" : "before_after",
      "default_value" : "",
      "label" : "After SQL statements",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 500,
      "multiline" : true,
      "name" : "before_after.after",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to stop the job if the After SQL statements fails.",
      "displayGroup" : "before_after",
      "default_value" : "true",
      "label" : "Fail on error for After SQL statements",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 700,
      "multiline" : false,
      "name" : "before_after.after.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the SQL statements from the file that is specified in the After SQL statements property.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Read After SQL statements from file",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 600,
      "multiline" : false,
      "name" : "before_after.after.read_from_file_after_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statements or the fully-qualified name of the file that contains the SQL statements to run once on each node after all data is processed on that node.",
      "displayGroup" : "before_after",
      "default_value" : "",
      "label" : "After SQL (node) statements",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1100,
      "multiline" : true,
      "name" : "before_after.after_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to stop the job if the After SQL (node) statements fails.",
      "displayGroup" : "before_after",
      "default_value" : "true",
      "label" : "Fail on error for After SQL (node) statements",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1300,
      "multiline" : false,
      "name" : "before_after.after_node.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the SQL statements from the file that is specified in the After SQL (node) statements property.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Read After SQL (node) statements from file",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1200,
      "multiline" : false,
      "name" : "before_after.after_node.read_from_file_after_sql_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statements or the fully-qualified name of the file that contains the SQL statements to run once before any data is processed.",
      "displayGroup" : "before_after",
      "default_value" : "",
      "label" : "Before SQL statements",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : true,
      "name" : "before_after.before",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to stop the job if the Before SQL statements fails.",
      "displayGroup" : "before_after",
      "default_value" : "true",
      "label" : "Fail on error for Before SQL statements",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "before_after.before.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the SQL statements from the file that is specified in the Before SQL statements property.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Read Before SQL statements from file",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : false,
      "name" : "before_after.before.read_from_file_before_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statements or the fully-qualified name of the file that contains the SQL statements to run once on each node before any data is processed on that node.",
      "displayGroup" : "before_after",
      "default_value" : "",
      "label" : "Before SQL (node) statements",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 800,
      "multiline" : true,
      "name" : "before_after.before_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to stop the job if the Before SQL (node) statements fails.",
      "displayGroup" : "before_after",
      "default_value" : "true",
      "label" : "Fail on error for Before SQL (node) statements",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1000,
      "multiline" : false,
      "name" : "before_after.before_node.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the SQL statements from the file that is specified in the Before SQL (node) statements property.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Read Before SQL (node) statements from file",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 900,
      "multiline" : false,
      "name" : "before_after.before_node.read_from_file_before_sql_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specifies whether or not to enclose database object names in quotes when generating DDL and DML",
      "displayGroup" : "general",
      "default_value" : "true",
      "label" : "Enable quoted identifiers",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 600,
      "multiline" : false,
      "name" : "enable_quoted_i_ds",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specifies whether to generate SQL statements at run time.",
      "displayGroup" : "general",
      "default_value" : "false",
      "label" : "Generate SQL",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "generate_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Set to true if stage has an output reference link",
      "displayGroup" : "general",
      "default_value" : "false",
      "label" : "Has reference output",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 75,
      "multiline" : false,
      "name" : "has_ref_output",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to limit the number of rows that are returned by the connector.",
      "displayGroup" : "limit_rows",
      "default_value" : "false",
      "label" : "Limit number of returned rows",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1100,
      "multiline" : false,
      "name" : "limit_rows",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the maximum number of rows that will be returned by the connector.",
      "displayGroup" : "limit_rows",
      "default_value" : "1000",
      "label" : "Limit",
      "type" : "integer",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1200,
      "multiline" : false,
      "name" : "limit_rows.limit",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Normal",
        "value" : "empty"
      }, {
        "label" : "Sparse",
        "value" : "pxbridge"
      } ],
      "description" : "Lookup Type",
      "displayGroup" : "general",
      "default_value" : "empty",
      "label" : "Lookup Type",
      "type" : "enum",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 50,
      "multiline" : false,
      "name" : "lookup_type",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "The maximum number of rows to return",
      "displayGroup" : "limitsSource",
      "label" : "Row limit",
      "type" : "integer",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 10,
      "multiline" : false,
      "name" : "row_limit",
      "multichoice" : false,
      "placeholder" : "1000"
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "The name of the schema that contains the table to read from",
      "displayGroup" : "generalSource",
      "label" : "Schema name",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 50,
      "multiline" : false,
      "name" : "schema_name",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "The array size to be used for all read and write database operations",
      "displayGroup" : "session",
      "default_value" : "2000",
      "label" : "Array size",
      "type" : "integer",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : false,
      "name" : "session.array_size",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Off",
        "value" : "off"
      }, {
        "label" : "On",
        "value" : "on"
      } ],
      "description" : "Specifies whether the connector commits transactions manually or allows the driver to commit automatically at its discretion",
      "displayGroup" : "session",
      "default_value" : "off",
      "label" : "Autocommit mode",
      "type" : "enum",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "session.autocommit_mode",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Default",
        "value" : "default"
      }, {
        "label" : "Unicode",
        "value" : "unicode"
      }, {
        "label" : "User-specified",
        "value" : "user-specified"
      } ],
      "description" : "Specify a code page to use for this data source",
      "displayGroup" : "session",
      "default_value" : "default",
      "label" : "Code page",
      "type" : "enum",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 900,
      "multiline" : false,
      "name" : "session.code_page",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "An ICU code page name compatible with this data source",
      "displayGroup" : "session",
      "label" : "Code page name",
      "type" : "string",
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1000,
      "multiline" : false,
      "name" : "session.code_page.code_page_name",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Default",
        "value" : "default"
      }, {
        "label" : "Read committed",
        "value" : "read_committed"
      }, {
        "label" : "Read uncommitted",
        "value" : "read_uncommitted"
      }, {
        "label" : "Repeatable read",
        "value" : "repeatable_read"
      }, {
        "label" : "Serializable",
        "value" : "serializable"
      } ],
      "description" : "The isolation level used for all database transactions",
      "displayGroup" : "session",
      "default_value" : "read_uncommitted",
      "label" : "Isolation level",
      "type" : "enum",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "session.isolation_level",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enables/disables the ability to specify LOB columns to be passed using locator (reference) information. LOB columns not specified will be passed inline",
      "displayGroup" : "session",
      "default_value" : "false",
      "label" : "Enable LOB references",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 700,
      "multiline" : false,
      "name" : "session.pass_lob_locator",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Use to choose columns containing LOBs to be passed by locator (reference)",
      "displayGroup" : "session",
      "default_value" : "",
      "label" : "Columns",
      "type" : "string",
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 800,
      "multiline" : false,
      "name" : "session.pass_lob_locator.column",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Fail if the code pages of fields are not compatible when validating the design schema against the database",
      "displayGroup" : "session",
      "default_value" : "false",
      "label" : "Fail on code page mismatch",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 600,
      "multiline" : false,
      "name" : "session.schema_reconciliation.fail_on_code_page_mismatch",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Fail if the sizes of numeric and string fields are not compatible when validating the design schema against the database",
      "displayGroup" : "session",
      "default_value" : "true",
      "label" : "Fail on size mismatch",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "session.schema_reconciliation.fail_on_size_mismatch",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Fail if the types of fields are not compatible when validating the design schema against the database",
      "displayGroup" : "session",
      "default_value" : "true",
      "label" : "Fail on type mismatch",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 500,
      "multiline" : false,
      "name" : "session.schema_reconciliation.fail_on_type_mismatch",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enable or disable partitioned reads by using the selected partitioning method.",
      "displayGroup" : "sql",
      "default_value" : "false",
      "label" : "Enable partitioned reads",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1000,
      "multiline" : false,
      "name" : "sql.enable_partitioning",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Minimum and Maximum range",
        "value" : "minimum_and_maximum_range"
      }, {
        "label" : "Modulus",
        "value" : "modulus"
      } ],
      "description" : "The method to use for partitioned reads.",
      "displayGroup" : "sql",
      "default_value" : "minimum_and_maximum_range",
      "label" : "Partitioned reads method",
      "type" : "enum",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1100,
      "multiline" : false,
      "name" : "sql.enable_partitioning.partitioning_method",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specifies the key column that is used by the selected partitioned reads method. This column must be a numeric data type.",
      "displayGroup" : "sql",
      "label" : "Column name",
      "type" : "string",
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1300,
      "multiline" : false,
      "name" : "sql.enable_partitioning.partitioning_method.key_field",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specifies the table that is used by the selected partitioned reads method.",
      "displayGroup" : "sql",
      "label" : "Table name",
      "type" : "string",
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1200,
      "multiline" : false,
      "name" : "sql.enable_partitioning.partitioning_method.table_name",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "The other clause predicate of the SQL statement",
      "displayGroup" : "sql",
      "label" : "Other clause",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 900,
      "multiline" : true,
      "name" : "sql.other_clause",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Statement to be executed when reading rows from the database or absolute path to the file containing the SQL statements.",
      "displayGroup" : "sql",
      "label" : "Select statement",
      "type" : "string",
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : true,
      "name" : "sql.select_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Select statement column",
      "displayGroup" : "sql",
      "label" : "Select statement column",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 500,
      "multiline" : false,
      "name" : "sql.select_statement.columns.column",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "The other clause predicate of the SQL statement",
      "displayGroup" : "sql",
      "label" : "Other clause",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 700,
      "multiline" : false,
      "name" : "sql.select_statement.other_clause",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Statement parameter represented as a comma delimited triplet containing ORCHESTRATE variable name, corresponding field name, and table name",
      "displayGroup" : "sql",
      "label" : "Parameter",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "sql.select_statement.parameters.parameter",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the SELECT statement from the file specified in the SELECT statement property.",
      "displayGroup" : "sql",
      "default_value" : "false",
      "label" : "Read select statement from file",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "sql.select_statement.read_statement_from_file",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Name of a table used in the statement",
      "displayGroup" : "sql",
      "label" : "Table name",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : false,
      "name" : "sql.select_statement.tables.table",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "The where clause predicate of the SQL statement",
      "displayGroup" : "sql",
      "label" : "Where clause",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 600,
      "multiline" : false,
      "name" : "sql.select_statement.where_clause",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "The where clause predicate of the SQL statement",
      "displayGroup" : "sql",
      "label" : "Where clause",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 800,
      "multiline" : true,
      "name" : "sql.where_clause",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "The table name to be used in generated SQL",
      "displayGroup" : "general",
      "label" : "Table name",
      "type" : "string",
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "table_name",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "After",
        "value" : "after"
      }, {
        "label" : "Before",
        "value" : "before"
      }, {
        "label" : "None",
        "value" : "none"
      } ],
      "description" : "Specify settings for the end of wave handling. None means EOW markers are never inserted, Before means EOW markers are inserted before committing the transaction, After means EOW markers are inserted after committing the transaction",
      "displayGroup" : "transaction",
      "default_value" : "none",
      "label" : "End of wave",
      "type" : "enum",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "transaction.end_of_wave",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specifies whether to insert an EOW marker for the last set of records when the number is less than the specified transaction record count value",
      "displayGroup" : "transaction",
      "default_value" : "false",
      "label" : "End of data",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : false,
      "name" : "transaction.end_of_wave.end_of_data",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Number of records per transaction. The value 0 means all available records",
      "displayGroup" : "transaction",
      "default_value" : "2000",
      "label" : "Record count",
      "type" : "integer",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "transaction.record_count",
      "multichoice" : false
    } ],
    "target" : [ {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to run specified SQL statements before and after data is accessed in the database.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Run before and after SQL statements",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "before_after",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statements or the fully-qualified name of the file that contains the SQL statements to run once after all data is processed.",
      "displayGroup" : "before_after",
      "default_value" : "",
      "label" : "After SQL statements",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 500,
      "multiline" : true,
      "name" : "before_after.after",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to stop the job if the After SQL statements fails.",
      "displayGroup" : "before_after",
      "default_value" : "true",
      "label" : "Fail on error for After SQL statements",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 700,
      "multiline" : false,
      "name" : "before_after.after.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the SQL statements from the file that is specified in the After SQL statements property.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Read After SQL statements from file",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 600,
      "multiline" : false,
      "name" : "before_after.after.read_from_file_after_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statements or the fully-qualified name of the file that contains the SQL statements to run once on each node after all data is processed on that node.",
      "displayGroup" : "before_after",
      "default_value" : "",
      "label" : "After SQL (node) statements",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1100,
      "multiline" : true,
      "name" : "before_after.after_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to stop the job if the After SQL (node) statements fails.",
      "displayGroup" : "before_after",
      "default_value" : "true",
      "label" : "Fail on error for After SQL (node) statements",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1300,
      "multiline" : false,
      "name" : "before_after.after_node.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the SQL statements from the file that is specified in the After SQL (node) statements property.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Read After SQL (node) statements from file",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1200,
      "multiline" : false,
      "name" : "before_after.after_node.read_from_file_after_sql_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statements or the fully-qualified name of the file that contains the SQL statements to run once before any data is processed.",
      "displayGroup" : "before_after",
      "default_value" : "",
      "label" : "Before SQL statements",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : true,
      "name" : "before_after.before",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to stop the job if the Before SQL statements fails.",
      "displayGroup" : "before_after",
      "default_value" : "true",
      "label" : "Fail on error for Before SQL statements",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "before_after.before.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the SQL statements from the file that is specified in the Before SQL statements property.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Read Before SQL statements from file",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : false,
      "name" : "before_after.before.read_from_file_before_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statements or the fully-qualified name of the file that contains the SQL statements to run once on each node before any data is processed on that node.",
      "displayGroup" : "before_after",
      "default_value" : "",
      "label" : "Before SQL (node) statements",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 800,
      "multiline" : true,
      "name" : "before_after.before_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to stop the job if the Before SQL (node) statements fails.",
      "displayGroup" : "before_after",
      "default_value" : "true",
      "label" : "Fail on error for Before SQL (node) statements",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1000,
      "multiline" : false,
      "name" : "before_after.before_node.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the SQL statements from the file that is specified in the Before SQL (node) statements property.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Read Before SQL (node) statements from file",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 900,
      "multiline" : false,
      "name" : "before_after.before_node.read_from_file_before_sql_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specifies whether or not to enclose database object names in quotes when generating DDL and DML",
      "displayGroup" : "general",
      "default_value" : "false",
      "label" : "Enable quoted identifiers",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 700,
      "multiline" : false,
      "name" : "enable_quoted_i_ds",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specifies whether to generate SQL statements at run time.",
      "displayGroup" : "general",
      "default_value" : "false",
      "label" : "Generate SQL",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : false,
      "name" : "generate_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Set to true if stage has an output reject link",
      "displayGroup" : "general",
      "default_value" : "false",
      "label" : "Has reject output",
      "type" : "boolean",
      "supported_products" : [ "datastage", "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 75,
      "multiline" : false,
      "name" : "has_reject_output",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specifies whether to log column values for the first row that fails to be written",
      "displayGroup" : "logging",
      "default_value" : "false",
      "label" : "Log column values on first row error",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "logging.log_column_values",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Comma",
        "value" : "comma"
      }, {
        "label" : "Newline",
        "value" : "newline"
      }, {
        "label" : "Space",
        "value" : "space"
      }, {
        "label" : "Tab",
        "value" : "tab"
      } ],
      "description" : "Specifies the delimiter to use between columns",
      "displayGroup" : "logging",
      "default_value" : "space",
      "label" : "Column delimiter",
      "type" : "enum",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : false,
      "name" : "logging.log_column_values.delimiter",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specifies whether to log key columns or all columns for failing statements",
      "displayGroup" : "logging",
      "default_value" : "false",
      "label" : "Log key values only",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "logging.log_column_values.log_keys_only",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "The name of the schema that contains the table to write to",
      "displayGroup" : "generalTarget",
      "label" : "Schema name",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 30,
      "multiline" : false,
      "name" : "schema_name",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "The array size to be used for all read and write database operations",
      "displayGroup" : "session",
      "default_value" : "2000",
      "label" : "Array size",
      "type" : "integer",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : false,
      "name" : "session.array_size",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Off",
        "value" : "off"
      }, {
        "label" : "On",
        "value" : "on"
      } ],
      "description" : "Specifies whether the connector commits transactions manually or allows the driver to commit automatically at its discretion",
      "displayGroup" : "session",
      "default_value" : "off",
      "label" : "Autocommit mode",
      "type" : "enum",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "session.autocommit_mode",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Default",
        "value" : "default"
      }, {
        "label" : "Unicode",
        "value" : "unicode"
      }, {
        "label" : "User-specified",
        "value" : "user-specified"
      } ],
      "description" : "Specify a code page to use for this data source",
      "displayGroup" : "session",
      "default_value" : "default",
      "label" : "Code page",
      "type" : "enum",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 800,
      "multiline" : false,
      "name" : "session.code_page",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "An ICU code page name compatible with this data source",
      "displayGroup" : "session",
      "label" : "Code page name",
      "type" : "string",
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 900,
      "multiline" : false,
      "name" : "session.code_page.code_page_name",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Fail the job if a write operation to the target is unsuccessful",
      "displayGroup" : "session",
      "default_value" : "true",
      "label" : "Fail on row error",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1000,
      "multiline" : false,
      "name" : "session.fail_on_row_error_px",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Default",
        "value" : "default"
      }, {
        "label" : "Read committed",
        "value" : "read_committed"
      }, {
        "label" : "Read uncommitted",
        "value" : "read_uncommitted"
      }, {
        "label" : "Repeatable read",
        "value" : "repeatable_read"
      }, {
        "label" : "Serializable",
        "value" : "serializable"
      } ],
      "description" : "The isolation level used for all database transactions",
      "displayGroup" : "session",
      "default_value" : "read_uncommitted",
      "label" : "Isolation level",
      "type" : "enum",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "session.isolation_level",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Drop fields that don't exist in the input schema",
      "displayGroup" : "session",
      "default_value" : "true",
      "label" : "Drop unmatched fields",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 700,
      "multiline" : false,
      "name" : "session.schema_reconciliation.drop_unmatched_fields",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Fail if the code pages of fields are not compatible when validating the design schema against the database",
      "displayGroup" : "session",
      "default_value" : "false",
      "label" : "Fail on code page mismatch",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 600,
      "multiline" : false,
      "name" : "session.schema_reconciliation.fail_on_code_page_mismatch",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Fail if the sizes of numeric and string fields are not compatible when validating the design schema against the database",
      "displayGroup" : "session",
      "default_value" : "true",
      "label" : "Fail on size mismatch",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "session.schema_reconciliation.fail_on_size_mismatch",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Fail if the types of fields are not compatible when validating the design schema against the database",
      "displayGroup" : "session",
      "default_value" : "true",
      "label" : "Fail on type mismatch",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 500,
      "multiline" : false,
      "name" : "session.schema_reconciliation.fail_on_type_mismatch",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Statement to be executed when deleting rows from the database",
      "displayGroup" : "sql",
      "label" : "Delete statement",
      "type" : "string",
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 900,
      "multiline" : true,
      "name" : "sql.delete_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Statement parameter represented as a comma delimited triplet containing ORCHESTRATE variable name, corresponding field name, and table name",
      "displayGroup" : "sql",
      "label" : "Parameter",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1100,
      "multiline" : false,
      "name" : "sql.delete_statement.parameters.parameter",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Statement to be executed when deleting rows from the database",
      "displayGroup" : "sql",
      "label" : "Delete statement",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1000,
      "multiline" : false,
      "name" : "sql.delete_statement.tables.table",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Statement to be executed when deleting rows from the database",
      "displayGroup" : "sql",
      "label" : "Delete statement",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1200,
      "multiline" : false,
      "name" : "sql.delete_statement.where_clause",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Statement to be executed when inserting rows into the database",
      "displayGroup" : "sql",
      "label" : "Insert statement",
      "type" : "string",
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : true,
      "name" : "sql.insert_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Statement parameter represented as a comma delimited triplet containing ORCHESTRATE variable name, corresponding field name, and table name",
      "displayGroup" : "sql",
      "label" : "Parameter",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : false,
      "name" : "sql.insert_statement.parameters.parameter",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Statement to be executed when inserting rows into the database",
      "displayGroup" : "sql",
      "label" : "Insert statement",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "sql.insert_statement.tables.table",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Statement to be executed when inserting rows into the database",
      "displayGroup" : "sql",
      "label" : "Insert statement",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "sql.insert_statement.where_clause",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Statement to be executed when updating rows in the database",
      "displayGroup" : "sql",
      "label" : "Update statement",
      "type" : "string",
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 500,
      "multiline" : true,
      "name" : "sql.update_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Statement parameter represented as a comma delimited triplet containing ORCHESTRATE variable name, corresponding field name, and table name",
      "displayGroup" : "sql",
      "label" : "Parameter",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 700,
      "multiline" : false,
      "name" : "sql.update_statement.parameters.parameter",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Statement to be executed when updating rows in the database",
      "displayGroup" : "sql",
      "label" : "Update statement",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 600,
      "multiline" : false,
      "name" : "sql.update_statement.tables.table",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Statement to be executed when updating rows in the database",
      "displayGroup" : "sql",
      "label" : "Update statement",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 800,
      "multiline" : false,
      "name" : "sql.update_statement.where_clause",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "File",
        "value" : "file"
      }, {
        "label" : "Statements",
        "value" : "statements"
      } ],
      "description" : "Source of the user-defined SQL statements",
      "displayGroup" : "sql",
      "default_value" : "statements",
      "label" : "User-defined SQL",
      "type" : "enum",
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1300,
      "multiline" : false,
      "name" : "sql.user_defined_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Abort the SQL statements when an error occurs",
      "displayGroup" : "sql",
      "default_value" : "true",
      "label" : "Fail On Error",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1700,
      "multiline" : false,
      "name" : "sql.user_defined_sql.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "File on the conductor node that contains SQL statements to be executed for each input row",
      "displayGroup" : "sql",
      "label" : "File",
      "type" : "string",
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1500,
      "multiline" : false,
      "name" : "sql.user_defined_sql.file",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "IANA character set name",
      "displayGroup" : "sql",
      "label" : "Character set",
      "type" : "string",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1600,
      "multiline" : false,
      "name" : "sql.user_defined_sql.file.character_set",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "SQL statements to be executed for each input row",
      "displayGroup" : "sql",
      "label" : "Statements",
      "type" : "string",
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1400,
      "multiline" : true,
      "name" : "sql.user_defined_sql.statements",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Append",
        "value" : "append"
      }, {
        "label" : "Create",
        "value" : "create"
      }, {
        "label" : "Replace",
        "value" : "replace"
      }, {
        "label" : "Truncate",
        "value" : "truncate"
      } ],
      "description" : "Select the action to perform on the database table",
      "displayGroup" : "table_action",
      "default_value" : "append",
      "label" : "Table action",
      "type" : "enum",
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "table_action",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specifies whether to generate a CREATE TABLE statement at run time",
      "displayGroup" : "table_action",
      "default_value" : "true",
      "label" : "Generate CREATE statement at run time",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "table_action.generate_create_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "A statement to be executed when creating the target database table",
      "displayGroup" : "table_action",
      "default_value" : "",
      "label" : "Create statement",
      "type" : "string",
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : true,
      "name" : "table_action.generate_create_statement.create_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Abort the job if there is an error executing a command",
      "displayGroup" : "table_action",
      "default_value" : "true",
      "label" : "Fail on error",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "table_action.generate_create_statement.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specifies whether to generate a DROP TABLE statement at run time",
      "displayGroup" : "table_action",
      "default_value" : "true",
      "label" : "Generate DROP statement at run time",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 500,
      "multiline" : false,
      "name" : "table_action.generate_drop_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "A statement to be executed when dropping the target database table",
      "displayGroup" : "table_action",
      "default_value" : "",
      "label" : "Drop statement",
      "type" : "string",
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 600,
      "multiline" : true,
      "name" : "table_action.generate_drop_statement.drop_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Abort the job if there is an error executing a command",
      "displayGroup" : "table_action",
      "default_value" : "false",
      "label" : "Fail on error",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 700,
      "multiline" : false,
      "name" : "table_action.generate_drop_statement.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specifies whether to generate a TRUNCATE TABLE statement at run time",
      "displayGroup" : "table_action",
      "default_value" : "true",
      "label" : "Generate TRUNCATE statement at run time",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 800,
      "multiline" : false,
      "name" : "table_action.generate_truncate_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Abort the job if there is an error executing a command",
      "displayGroup" : "table_action",
      "default_value" : "true",
      "label" : "Fail on error",
      "type" : "boolean",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1000,
      "multiline" : false,
      "name" : "table_action.generate_truncate_statement.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "A statement to be executed when truncating the database table",
      "displayGroup" : "table_action",
      "default_value" : "",
      "label" : "Truncate statement",
      "type" : "string",
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 900,
      "multiline" : true,
      "name" : "table_action.generate_truncate_statement.truncate_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "The table name to be used in generated SQL",
      "displayGroup" : "general",
      "label" : "Table name",
      "type" : "string",
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 500,
      "multiline" : false,
      "name" : "table_name",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Number of records per transaction. The value 0 means all available records",
      "displayGroup" : "transaction",
      "default_value" : "2000",
      "label" : "Record count",
      "type" : "integer",
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "transaction.record_count",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Delete",
        "value" : "delete"
      }, {
        "label" : "Delete then insert",
        "value" : "delete_then_insert"
      }, {
        "label" : "Insert",
        "value" : "insert"
      }, {
        "label" : "Insert new rows only",
        "value" : "insert_new_rows_only"
      }, {
        "label" : "Insert then update",
        "value" : "insert_then_update"
      }, {
        "label" : "Update",
        "value" : "update"
      }, {
        "label" : "Update then insert",
        "value" : "update_then_insert"
      }, {
        "label" : "User-defined SQL",
        "value" : "user-defined_sql"
      } ],
      "description" : "The mode to be used when writing to a database table",
      "displayGroup" : "general",
      "default_value" : "insert",
      "label" : "Write mode",
      "type" : "enum",
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "write_mode",
      "multichoice" : false
    } ]
  },
  "datasource_type" : "0ca92c3d-0e46-3b42-a573-77958d53c9be",
  "name" : "Postgres-Demo",
  "rov" : {
    "mode" : 0,
    "member_roles" : {
      "1000331036" : {
        "roles" : [ "OWNER" ],
        "user_iam_id" : "1000331036"
      }
    }
  },
  "description" : "ODBC Connection to Postgres Demo RDS Instance - manually created",
  "properties" : {
    "database" : "demo",
    "dsn_type" : "PostgreSQL",
    "hostname" : "{dsmenc}xnNA5v0sVsMVqEIoBN0MQEAMPGyg6jPCoc6cAE0q/NCnVvoHY9M7mWqDlIBmV9oDtq3ZfV3Tjuk2vMABtTc93A==",
    "password" : "{dsmenc}zyqj71FxDHT1ZfosZz9LQw==",
    "port" : "5432",
    "cas_lite_auth_header" : "",
    "additional_props" : "schema=em;",
    "username" : "{dsmenc}QnbGmCvR2vElxqwGgRU0+A=="
  },
  "data_source_definition_searchable" : "postgres-demo.ct2nfr0hc9uq.ap-southeast-2.rds.amazonaws.com|5432|demo",
  "origin_country" : "us"
}